name: Docker Build & Push
description: Docker Build & Push
inputs:
  version:
    description: artifact version
    required: true
  image:
    description: image
    required: true
  docker_file:
    description: docker file to build
    default: "Dockerfile"
    required: true
  context:
    description: docker context
    required: true
  gh_token:
    description: docker context
    required: true
  build-contexts:
    description: docker context
    required: false
    default: ""
  platforms:
    description: platforms to build
    required: false
    default: "linux/amd64,linux/arm64"
  push:
    description: push to registry
    required: false
    default: "true"
runs:
  using: 'composite'
  steps:
    - name: Set up Docker
      uses: docker/setup-docker-action@v4
      with:
        daemon-config: |
          {
            "debug": true,
            "features": {
              "containerd-snapshotter": true
            }
          }   

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.gh_token }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.image }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6
      env:
        GITHUB_TOKEN: ${{ inputs.gh_token }}
      with:
        build-contexts: |
          ${{ inputs.build-contexts }}
        file: "${{ inputs.context }}/${{ inputs.docker_file }}"
        context: ${{ inputs.context }}
        platforms: ${{  inputs.platforms }}
#        cache-from: type=gha
#        cache-to: type=gha,mode=max
        push: ${{ inputs.push }}
        secrets: |
          GITHUB_TOKEN=${{ inputs.gh_token }}
        tags: |
          ${{ steps.meta.outputs.tags }}
          ${{ inputs.image }}:${{ inputs.version }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          GITHUB_TOKEN=${{ inputs.gh_token }}
