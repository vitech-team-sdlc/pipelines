name: verify commits with commitlint
description: |
  Verify commits with commitlint according to the provided configuration.
inputs:
  modules:
    description: modules to install
    required: true
    default: "@commitlint/config-conventional,@commitlint/config-angular"
  not-fail-on-error:
    description: fail on error
    required: false
    default: 'false'
  publish:
    description: publish the commitlint as GH check
    required: false
    default: 'false'
  token:
    description: GitHub Token
    required: true
runs:
  using: 'composite'
  steps:
    - name: Install dependencies
      shell: bash
      #language=bash
      run: |
        IFS=',' read -ra MODULES <<< "${{ inputs.modules }}"
        for module in "${MODULES[@]}"; do
          echo "Installing $module globally..."
          npm install -g "$module"
        done
        echo "All modules installed: ${{ inputs.modules }}"

    - name: Validate PR commits with commitlint
      shell: bash
      id: commitlint
      continue-on-error: ${{ inputs.fail-on-error == 'true' }}
      #language=bash
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "Validating PR commits with commitlint..."
          npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose &> commitlint.log
        else
          npx commitlint --last --verbose &> commitlint.log
        fi
        echo "summary=$(cat commitlint.log)" >> $GITHUB_OUTPUT

    - uses: LouisBrunner/checks-action@v2.0.0
      if: ${{ inputs.publish == 'true' }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: ðŸŒš Commitlint
        conclusion: ${{ job.status }}
        output: |
          {"summary":"${{ steps.commitlint.outputs.summary }}"}
