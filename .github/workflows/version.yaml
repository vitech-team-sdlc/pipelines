name: Determine Next Release Version

on:
  workflow_dispatch:

  workflow_call:
    inputs:
      fail-if-no-version:
        description: |
          Not all conventional commit prefixes produce a new version. For example, `ci`, `build`, and `chore` do not bump the version. 
          In such cases, you might want to disable the version check inside the action.
          Examples of commit messages and their version bump:
            - `fix: correct a typo` -> Patch version bump (1.0.0 -> 1.0.1)
            - `feat: add new feature` -> Minor version bump (1.0.0 -> 1.1.0)
            - `chore: update dependencies` -> No version bump
        required: false
        default: "true"
        type: string
    secrets:
      GH_TOKEN:
        description: "GitHub Token"
        required: true
      SLACK_WEBHOOK:
        description: "Slack Webhook"
        required: true
    outputs:
      version:
        description: "next version"
        value: ${{ jobs.new_version.outputs.version }}

jobs:
  new_version:
    name: ðŸ‘€ Detecting New Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - uses: vitech-team-sdlc/pipelines/actions/version-next@main
        id: extract_version
        with:
          fail: ${{ inputs.fail-if-no-version }}
          dry-run: 'true'
          use-default-config: 'false'
          token: ${{ secrets.GH_TOKEN }}
          slack_webhook: ${{ secrets.SLACK_WEBHOOK }}
